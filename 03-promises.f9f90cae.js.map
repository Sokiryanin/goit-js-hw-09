{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAGtCH,EAAKC,KAAKM,iBAAiB,SAa3B,SAAuBC,GACrB,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAMV,OAJAC,EAAWJ,MAAQA,EAAMK,MACzBD,EAAWH,KAAOA,EAAKI,MACvBD,EAAWF,OAASA,EAAOG,MAEpBD,C,IArBTd,EAAKC,KAAKM,iBAAiB,UAqC3B,SAAqBC,GACnBA,EAAMQ,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAWF,OAAQK,GAAK,EAAG,CAC7C,MAAMC,EAAcC,OAAOL,EAAWJ,OAASS,OAAOL,EAAWH,MAAQM,EACzEG,EAAcH,EAAI,EAAGC,GAClBG,KAAKC,GACLC,MAAMC,E,KA1Cb,MAAMF,EAAY,EAACG,SAAEA,EAAQf,MAAEA,MAC7BgB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBH,QAAiBf,MAAU,EAGpEc,EAAU,EAACC,SAAEA,EAAQf,MAAEA,MAC3BgB,EAAA5B,GAAS6B,OAAOE,QAAQ,sBAAoBJ,QAAef,MAAU,EAGjEI,EAAa,GAcnB,SAASM,EAAcK,EAAUf,GAC/B,MAAMoB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAET,E,MAAUf,IAEpByB,EAAO,C,SAAEV,E,MAAUf,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener(\"input\", onInputChange);\nrefs.form.addEventListener(\"submit\", onBtnSubmit);\n\nconst onSuccess = ({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst onError = ({ position, delay }) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nconst formFields = {};\n\nfunction onInputChange(event) {\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  formFields.delay = delay.value;\n  formFields.step = step.value;\n  formFields.amount = amount.value;\n\n  return formFields;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n\n  for (let i = 0; i < formFields.amount; i += 1) {\n    const commonDelay = Number(formFields.delay) + Number(formFields.step) * i;\n    createPromise(i + 1, commonDelay)\n      .then(onSuccess)\n      .catch(onError);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","addEventListener","event","elements","delay","step","amount","currentTarget","$47d4ff9957288465$var$formFields","value","preventDefault","i","commonDelay","Number","$47d4ff9957288465$var$createPromise","then","$47d4ff9957288465$var$onSuccess","catch","$47d4ff9957288465$var$onError","position","$parcel$interopDefault","Notify","success","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.f9f90cae.js.map"}